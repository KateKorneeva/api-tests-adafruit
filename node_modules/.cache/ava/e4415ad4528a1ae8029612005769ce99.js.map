{"version":3,"sources":["test/helpers/shortcuts.js"],"names":["getApi","client","axios","create","baseURL","url","user","validateStatus","auth","api","defaults","headers","ioKey","logout","responseErrMessage","response","JSON","stringify","data","createFeed","t","feedObject","feedFixtureObj","resp","post","is","status","deleteFeed","feedKey","delete","validateBySchema","schema","tv4","validate","errors","validateMultiple","forEach","error","objectWithErr","getObjectContainingValue","dataPath","failMessage","message","fail"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAOO,MAAMA,MAAM,GAAG,YAAY;AAC9B,QAAMC,MAAM,GAAGC,eAAMC,MAAN,CAAa;AACxBC,IAAAA,OAAO,EAAEC,qBAAMC,8BADS;;AAExBC,IAAAA,cAAc,GAAG;AAAE,aAAO,IAAP;AAAc;;AAFT,GAAb,CAAf;;AAKA,SAAON,MAAP;AACH,CAPM;;;;AASA,MAAMO,IAAI,GAAGC,GAAG,IAAI;AACvBA,EAAAA,GAAG,CAACC,QAAJ,CAAaC,OAAb,CAAqB,WAArB,IAAoCC,yBAApC;AACH,CAFM;;;;AAIA,MAAMC,MAAM,GAAGJ,GAAG,IAAI;AACzB,SAAOA,GAAG,CAACC,QAAJ,CAAaC,OAAb,CAAqB,WAArB,CAAP;AACH,CAFM;;;;AAIA,MAAMG,kBAAkB,GAAGC,QAAQ,IAAI;AAC1C,SAAOC,IAAI,CAACC,SAAL,CAAeF,QAAQ,CAACG,IAAxB,EAA8B,IAA9B,EAAoC,CAApC,CAAP;AACH,CAFM;;;;AAIA,MAAMC,UAAU,GAAG,OAAOC,CAAP,EAAUX,GAAV,EAAeY,UAAU,GAAGC,oBAA5B,KAAgD;AACtE,QAAMC,IAAI,GAAI,MAAMd,GAAG,CAACe,IAAJ,CAAS,QAAT,EAAmBH,UAAnB,CAApB;AACAD,EAAAA,CAAC,CAACK,EAAF,CAAKF,IAAI,CAACG,MAAV,EAAkB,GAAlB,EAAuBZ,kBAAkB,CAACS,IAAD,CAAzC;AAEA,SAAOA,IAAI,CAACL,IAAZ;AACH,CALM;;;;AAOA,MAAMS,UAAU,GAAG,OAAOP,CAAP,EAAUX,GAAV,EAAemB,OAAf,KAA4B;AAClD,QAAML,IAAI,GAAI,MAAMd,GAAG,CAACoB,MAAJ,CAAY,UAASD,OAAQ,EAA7B,CAApB;AACAR,EAAAA,CAAC,CAACK,EAAF,CAAKF,IAAI,CAACG,MAAV,EAAkB,GAAlB,EAAuBZ,kBAAkB,CAACS,IAAD,CAAzC;AAEA,SAAOA,IAAI,CAACL,IAAZ;AACH,CALM;;;;AAOA,MAAMY,gBAAgB,GAAG,CAACV,CAAD,EAAIF,IAAJ,EAAUa,MAAV,KAAqB;AACjD,MAAI,CAACC,YAAIC,QAAJ,CAAaf,IAAb,EAAmBa,MAAnB,CAAL,EAAiC;AAAE;AAC/B,UAAMG,MAAM,GAAGF,YAAIG,gBAAJ,CAAqBjB,IAArB,EAA2Ba,MAA3B,EAAmCG,MAAlD;;AACAA,IAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAI;AACpB,YAAMC,aAAa,GAAGC,wBAAwB,CAACrB,IAAD,EAAOmB,KAAK,CAACG,QAAb,CAA9C;AACA,YAAMC,WAAW,GAAG,+BAA+BJ,KAAK,CAACK,OAArC,GAClB,iBADkB,GACEL,KAAK,CAACG,QADR,GAElB,uBAFkB,GAEQF,aAF5B;AAIAlB,MAAAA,CAAC,CAACuB,IAAF,CAAOF,WAAP;AACH,KAPD;AAQH;AACJ,CAZM","sourceRoot":"/home/kate/moeco/adafruit","sourcesContent":["import axios from 'axios';\nimport tv4 from 'tv4';\nimport {\n    BASE_URL as url,\n    ADAFRUIT_IO_KEY as ioKey,\n    ADAFRUIT_IO_USERNAME as user,\n    feedObject as feedFixtureObj\n} from './fixtures';\n\nexport const getApi = async () => {\n    const client = axios.create({\n        baseURL: url + user,\n        validateStatus() { return true; },\n    });\n\n    return client;\n};\n\nexport const auth = api => {\n    api.defaults.headers['X-AIO-Key'] = ioKey;\n};\n\nexport const logout = api => {\n    delete api.defaults.headers['X-AIO-Key'];\n};\n\nexport const responseErrMessage = response => {\n    return JSON.stringify(response.data, null, 2)\n};\n\nexport const createFeed = async (t, api, feedObject = feedFixtureObj ) => {\n    const resp  = await api.post('/feeds', feedObject);\n    t.is(resp.status, 201, responseErrMessage(resp));\n\n    return resp.data\n};\n\nexport const deleteFeed = async (t, api, feedKey ) => {\n    const resp  = await api.delete(`/feeds/${feedKey}`);\n    t.is(resp.status, 200, responseErrMessage(resp));\n\n    return resp.data\n};\n\nexport const validateBySchema = (t, data, schema) => {\n    if (!tv4.validate(data, schema)) { // if simple schema validation returns false\n        const errors = tv4.validateMultiple(data, schema).errors;\n        errors.forEach(error => {\n            const objectWithErr = getObjectContainingValue(data, error.dataPath);\n            const failMessage = 'Schema validation error:\\n' + error.message\n            + '\\n dataPath:   ' + error.dataPath\n            + '\\n Object with error:' + objectWithErr;\n\n            t.fail(failMessage);\n        });\n    }\n};"]}