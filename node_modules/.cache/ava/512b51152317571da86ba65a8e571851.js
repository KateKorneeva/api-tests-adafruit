"use strict";

var _ava = _interopRequireDefault(require("ava"));

var _shortcuts = require("./helpers/shortcuts");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_ava.default.before('Create feed', async t => {
  // Authorise
  t.context.api = await (0, _shortcuts.getApi)();
  (0, _shortcuts.auth)(t.context.api);
  t.context.feed = await (0, _shortcuts.createFeed)(t, t.context.api);
});

(0, _ava.default)('Create feed works', async t => {
  const feed = {
    name: 'autotest-feed1',
    description: 'feed generated by api autotest1'
  };
  const resp = await t.context.api.post('/feeds', feed);
  t.is(resp.status, 201, (0, _shortcuts.responseErrMessage)(resp));
});

_ava.default.serial('Create feed fails without token', async t => {
  (0, _shortcuts.logout)(t.context.api);
  const feed = {
    name: 'autotest-feed',
    description: 'feed generated by api autotest'
  };
  const resp = await t.context.api.post('/feeds', feed);
  t.is(resp.status, 401, (0, _shortcuts.responseErrMessage)(resp));
  (0, _shortcuts.auth)(t.context.api);
});

(0, _ava.default)('Create feed fails with wrong inputs', async t => {
  const feed = {
    name: null,
    description: null
  };
  const resp = await t.context.api.post('/feeds', feed);
  t.is(resp.status, 400, (0, _shortcuts.responseErrMessage)(resp));
});
(0, _ava.default)('Get all feeds works', async t => {
  const resp = await t.context.api.get('/feeds');
  t.is(resp.status, 200, (0, _shortcuts.responseErrMessage)(resp));
  t.is(resp.data[0].owner.username, 'korneed');
});
(0, _ava.default)('Delete feed works', async t => {
  // Create feed
  const feedObject = {
    name: 'autotest-feed-to-delete',
    description: 'feed generated by api autotest to delete'
  };
  const feed = await (0, _shortcuts.createFeed)(t, t.context.api, feedObject);
  const respDelete = await t.context.api.delete(`/feeds/${feed.key}`);
  t.is(respDelete.status, 200, (0, _shortcuts.responseErrMessage)(respDelete));
}); // Get all feeds does not work without auth
// Get feed by id works
// Get feed by id does not work without auth
// // Also add tv4 validation
// test.skip('Feeds are displayed in groups', async t => {
//     const api = await getApi();
//     await auth(api);
//     const resp = await api.get('/groups');
//     t.is(resp.status, 200);
//     t.is(resp.data[0].feeds[0].name, 'new_feed');
// });
//# sourceMappingURL=/home/kate/moeco/adafruit/node_modules/.cache/ava/512b51152317571da86ba65a8e571851.js.map