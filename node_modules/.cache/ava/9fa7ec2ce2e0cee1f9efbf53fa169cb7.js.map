{"version":3,"sources":["test/feed.test.js"],"names":["test","before","t","context","api","resp","get","is","status"],"mappings":";;AAAA;;AACA;;;;AAEAA,aAAKC,MAAL,CAAY,oCAAZ,EAAkD,MAAMC,CAAN,IAAW;AACzDA,EAAAA,CAAC,CAACC,OAAF,CAAUC,GAAV,GAAgB,MAAM,uBAAtB;AACA,QAAM,oBAAKF,CAAC,CAACC,OAAF,CAAUC,GAAf,CAAN;AACH,CAHD;;AAKA,kBAAK,mBAAL,EAA0B,MAAMF,CAAN,IAAW;AACjC,QAAMG,IAAI,GAAG,MAAMH,CAAC,CAACC,OAAF,CAAUC,GAAV,CAAcE,GAAd,CAAkB,QAAlB,CAAnB;AACAJ,EAAAA,CAAC,CAACK,EAAF,CAAKF,IAAI,CAACG,MAAV,EAAkB,GAAlB,EAFiC,CAGjC;AACH,CAJD,E,CAMA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourceRoot":"/home/kate/moeco/adafruit","sourcesContent":["import test from 'ava';\nimport { getApi, auth } from '../requests';\n\ntest.before('Add authorization token to request', async t => {\n    t.context.api = await getApi();\n    await auth(t.context.api);\n});\n\ntest('Create feed works', async t => {\n    const resp = await t.context.api.get('/feeds');\n    t.is(resp.status, 200);\n    // t.is(resp.data[0].feeds[0].name, 'new_feed');\n});\n\n// test('Create feed fails without token', async t => {\n//     t.pass();\n// });\n\n// test('Create feed fails with wrong inputs', async t => {\n//     t.pass();\n// });\n\n// test('Get all feeds works', async t => {\n//     t.pass();\n// });\n\n// // Get all feeds does not work without auth\n// // Get feed by id works\n// // Get feed by id does not work without auth\n\n// test('Add data to feed works', async t => {\n//     t.pass();\n// });\n// // And without auth - not\n\n// // Matrix with wrong inputs\n\n// test('Edit data in feed works', async t => {\n//     t.pass();\n// });\n// // And without auth - not\n\n// test('Delete data in feed works', async t => {\n//     t.pass();\n// });\n// // And without auth - not\n\n// test('Create dashboard works', async t => {\n//     t.pass();\n// });\n// // Edit, remove, and all witout auth and then with wrong inpts\n\n// // Also add tv4 validation\n\n// test.skip('Feeds are displayed in groups', async t => {\n//     const api = await getApi();\n//     await auth(api);\n//     const resp = await api.get('/groups');\n//     t.is(resp.status, 200);\n//     t.is(resp.data[0].feeds[0].name, 'new_feed');\n// });"]}