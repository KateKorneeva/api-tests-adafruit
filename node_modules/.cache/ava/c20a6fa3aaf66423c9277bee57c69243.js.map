{"version":3,"sources":["test/data.js"],"names":["test","before","t","context","api","feed","name","description","resp","post","is","status","data","value","respData","key","toString","feed_key"],"mappings":";;AAAA;;AACA;;;;AAOAA,aAAKC,MAAL,CAAY,aAAZ,EAA2B,MAAMC,CAAN,IAAW;AAClC;AACAA,EAAAA,CAAC,CAACC,OAAF,CAAUC,GAAV,GAAgB,MAAM,wBAAtB;AACA,uBAAKF,CAAC,CAACC,OAAF,CAAUC,GAAf,EAHkC,CAKlC;;AACA,QAAMC,IAAI,GAAG;AAAEC,IAAAA,IAAI,EAAE,uBAAR;AAAiCC,IAAAA,WAAW,EAAE;AAA9C,GAAb;AACA,QAAMC,IAAI,GAAI,MAAMN,CAAC,CAACC,OAAF,CAAUC,GAAV,CAAcK,IAAd,CAAmB,QAAnB,EAA6BJ,IAA7B,CAApB;AACAH,EAAAA,CAAC,CAACQ,EAAF,CAAKF,IAAI,CAACG,MAAV,EAAkB,GAAlB,EAAuB,mCAAIH,IAAJ,CAAvB;AACAN,EAAAA,CAAC,CAACC,OAAF,CAAUE,IAAV,GAAiBG,IAAI,CAACI,IAAtB;AACH,CAVD;;AAYA,kBAAK,wBAAL,EAA+B,MAAMV,CAAN,IAAW;AACtC,QAAMU,IAAI,GAAG;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAb;AACA,QAAMC,QAAQ,GAAG,MAAMZ,CAAC,CAACC,OAAF,CAAUC,GAAV,CAAcK,IAAd,CAAoB,UAASP,CAAC,CAACC,OAAF,CAAUE,IAAV,CAAeU,GAAI,OAAhD,EAAwDH,IAAxD,CAAvB;AACAV,EAAAA,CAAC,CAACQ,EAAF,CAAKI,QAAQ,CAACH,MAAd,EAAsB,GAAtB,EAA2B,mCAAIG,QAAJ,CAA3B;AACAZ,EAAAA,CAAC,CAACQ,EAAF,CAAKI,QAAQ,CAACF,IAAT,CAAcC,KAAnB,EAA0BD,IAAI,CAACC,KAAL,CAAWG,QAAX,EAA1B;AACAd,EAAAA,CAAC,CAACQ,EAAF,CAAKI,QAAQ,CAACF,IAAT,CAAcK,QAAnB,EAA6Bf,CAAC,CAACC,OAAF,CAAUE,IAAV,CAAeU,GAA5C;AACH,CAND,E,CAOA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourceRoot":"/home/kate/moeco/adafruit","sourcesContent":["import test from 'ava';\nimport {\n    getApi,\n    auth,\n    logout,\n    responseErrMessage as err\n} from '../shortcuts';\n\ntest.before('Create feed', async t => {\n    // Authorise\n    t.context.api = await getApi();\n    auth(t.context.api);\n\n    // Create feed\n    const feed = { name: 'autotest-feed-default', description: 'default feed generated by api autotest'};\n    const resp  = await t.context.api.post('/feeds', feed);\n    t.is(resp.status, 201, err(resp));\n    t.context.feed = resp.data;\n});\n\ntest('Add data to feed works', async t => {\n    const data = { value: 42 };\n    const respData = await t.context.api.post(`/feeds/${t.context.feed.key}/data`, data);\n    t.is(respData.status, 200, err(respData));\n    t.is(respData.data.value, data.value.toString());\n    t.is(respData.data.feed_key, t.context.feed.key);\n});\n// And without auth - not\n\n// // Matrix with wrong inputs\n\n// test('Edit data in feed works', async t => {\n//     t.pass();\n// });\n// // And without auth - not\n\n// test('Delete data in feed works', async t => {\n//     t.pass();\n// });\n// // And without auth - not\n\n// // Also add tv4 validation\n\n// test.skip('Feeds are displayed in groups', async t => {\n//     const api = await getApi();\n//     await auth(api);\n//     const resp = await api.get('/groups');\n//     t.is(resp.status, 200);\n//     t.is(resp.data[0].feeds[0].name, 'new_feed');\n// });"]}