"use strict";

var _ava = _interopRequireDefault(require("ava"));

var _requests = require("../requests");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_ava.default.before('Add authorization token to request', async t => {
  t.context.api = await (0, _requests.getApi)();
  await (0, _requests.auth)(t.context.api);
});

(0, _ava.default)('Create feed works', async t => {
  const resp = await t.context.api.get('/feeds');
  t.is(resp.status, 200); // t.is(resp.data[0].feeds[0].name, 'new_feed');
}); // test('Create feed fails without token', async t => {
//     t.pass();
// });
// test('Create feed fails with wrong inputs', async t => {
//     t.pass();
// });
// test('Get all feeds works', async t => {
//     t.pass();
// });
// // Get all feeds does not work without auth
// // Get feed by id works
// // Get feed by id does not work without auth
// test('Add data to feed works', async t => {
//     t.pass();
// });
// // And without auth - not
// // Matrix with wrong inputs
// test('Edit data in feed works', async t => {
//     t.pass();
// });
// // And without auth - not
// test('Delete data in feed works', async t => {
//     t.pass();
// });
// // And without auth - not
// test('Create dashboard works', async t => {
//     t.pass();
// });
// // Edit, remove, and all witout auth and then with wrong inpts
// // Also add tv4 validation
// test.skip('Feeds are displayed in groups', async t => {
//     const api = await getApi();
//     await auth(api);
//     const resp = await api.get('/groups');
//     t.is(resp.status, 200);
//     t.is(resp.data[0].feeds[0].name, 'new_feed');
// });
//# sourceMappingURL=/home/kate/moeco/adafruit/node_modules/.cache/ava/9fa7ec2ce2e0cee1f9efbf53fa169cb7.js.map