{"version":3,"sources":["test/data.js"],"names":["test","before","t","context","api","feedObject","name","description","feed","data","value","respData","post","key","is","status","toString","feed_key","serial","only"],"mappings":";;AAAA;;AACA;;;;AAQAA,aAAKC,MAAL,CAAY,aAAZ,EAA2B,MAAMC,CAAN,IAAW;AAClC;AACAA,EAAAA,CAAC,CAACC,OAAF,CAAUC,GAAV,GAAgB,MAAM,wBAAtB;AACA,uBAAKF,CAAC,CAACC,OAAF,CAAUC,GAAf,EAHkC,CAKlC;;AACA,QAAMC,UAAU,GAAG;AAAEC,IAAAA,IAAI,EAAE,yBAAR;AAAmCC,IAAAA,WAAW,EAAE;AAAhD,GAAnB;AACAL,EAAAA,CAAC,CAACC,OAAF,CAAUK,IAAV,GAAiB,MAAM,2BAAWN,CAAX,EAAcA,CAAC,CAACC,OAAF,CAAUC,GAAxB,EAA6BC,UAA7B,CAAvB;AACH,CARD;;AAUA,kBAAK,wBAAL,EAA+B,MAAMH,CAAN,IAAW;AACtC,QAAMO,IAAI,GAAG;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAb;AACA,QAAMC,QAAQ,GAAG,MAAMT,CAAC,CAACC,OAAF,CAAUC,GAAV,CAAcQ,IAAd,CAAoB,UAASV,CAAC,CAACC,OAAF,CAAUK,IAAV,CAAeK,GAAI,OAAhD,EAAwDJ,IAAxD,CAAvB;AACAP,EAAAA,CAAC,CAACY,EAAF,CAAKH,QAAQ,CAACI,MAAd,EAAsB,GAAtB,EAA2B,mCAAIJ,QAAJ,CAA3B;AACAT,EAAAA,CAAC,CAACY,EAAF,CAAKH,QAAQ,CAACF,IAAT,CAAcC,KAAnB,EAA0BD,IAAI,CAACC,KAAL,CAAWM,QAAX,EAA1B;AACAd,EAAAA,CAAC,CAACY,EAAF,CAAKH,QAAQ,CAACF,IAAT,CAAcQ,QAAnB,EAA6Bf,CAAC,CAACC,OAAF,CAAUK,IAAV,CAAeK,GAA5C;AACH,CAND,E,CAQA;;AACAb,aAAKkB,MAAL,CAAYC,IAAZ,CAAiB,2CAAjB,EAA8D,MAAMjB,CAAN,IAAW;AACrE,yBAAOA,CAAC,CAACC,OAAF,CAAUC,GAAjB;AAEA,QAAMK,IAAI,GAAG;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAb;AACA,QAAMC,QAAQ,GAAG,MAAMT,CAAC,CAACC,OAAF,CAAUC,GAAV,CAAcQ,IAAd,CAAoB,UAASV,CAAC,CAACC,OAAF,CAAUK,IAAV,CAAeK,GAAI,OAAhD,EAAwDJ,IAAxD,CAAvB;AACAP,EAAAA,CAAC,CAACY,EAAF,CAAKH,QAAQ,CAACI,MAAd,EAAsB,GAAtB,EAA2B,mCAAIJ,QAAJ,CAA3B;AACH,CAND,E,CAOA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourceRoot":"/home/kate/moeco/adafruit","sourcesContent":["import test from 'ava';\nimport {\n    getApi,\n    auth,\n    logout,\n    createFeed,\n    responseErrMessage as err\n} from './helpers/shortcuts';\n\ntest.before('Create feed', async t => {\n    // Authorise\n    t.context.api = await getApi();\n    auth(t.context.api);\n\n    // Create feed\n    const feedObject = { name: 'autotest-feed-with-data', description: 'feed generated by api autotest with data'};\n    t.context.feed = await createFeed(t, t.context.api, feedObject);\n});\n\ntest('Add data to feed works', async t => {\n    const data = { value: 42 };\n    const respData = await t.context.api.post(`/feeds/${t.context.feed.key}/data`, data);\n    t.is(respData.status, 200, err(respData));\n    t.is(respData.data.value, data.value.toString());\n    t.is(respData.data.feed_key, t.context.feed.key);\n});\n\n// Serial because logout influences parallel tests otherwise\ntest.serial.only('Add data to feed fails without auth token', async t => {\n    logout(t.context.api);\n\n    const data = { value: 42 };\n    const respData = await t.context.api.post(`/feeds/${t.context.feed.key}/data`, data);\n    t.is(respData.status, 401, err(respData));\n});\n// And without auth - not\n\n// // Matrix with wrong inputs\n\n// test('Edit data in feed works', async t => {\n//     t.pass();\n// });\n// // And without auth - not\n\n// test('Delete data in feed works', async t => {\n//     t.pass();\n// });\n// // And without auth - not\n\n// // Also add tv4 validation\n\n// test.skip('Feeds are displayed in groups', async t => {\n//     const api = await getApi();\n//     await auth(api);\n//     const resp = await api.get('/groups');\n//     t.is(resp.status, 200);\n//     t.is(resp.data[0].feeds[0].name, 'new_feed');\n// });"]}