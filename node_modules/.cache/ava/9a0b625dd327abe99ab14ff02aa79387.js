"use strict";

var _ava = _interopRequireDefault(require("ava"));

var _shortcuts = require("./helpers/shortcuts");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_ava.default.before('Create feed', async t => {
  // Authorise
  t.context.api = await (0, _shortcuts.getApi)();
  (0, _shortcuts.auth)(t.context.api); // Create feed

  const feedObject = {
    name: 'autotest-feed-with-data',
    description: 'feed generated by api autotest with data'
  };
  t.context.feed = await (0, _shortcuts.createFeed)(t, t.context.api, feedObject);
});

(0, _ava.default)('Add data to feed works', async t => {
  const data = {
    value: 42
  };
  const respData = await t.context.api.post(`/feeds/${t.context.feed.key}/data`, data);
  t.is(respData.status, 200, (0, _shortcuts.responseErrMessage)(respData));
  t.is(respData.data.value, data.value.toString());
  t.is(respData.data.feed_key, t.context.feed.key);
}); // Serial because logout influences parallel tests otherwise

_ava.default.serial.only('Add data to feed fails without auth token', async t => {
  (0, _shortcuts.logout)(t.context.api);
  const data = {
    value: 42
  };
  const respData = await t.context.api.post(`/feeds/${t.context.feed.key}/data`, data);
  t.is(respData.status, 401, (0, _shortcuts.responseErrMessage)(respData));
}); // And without auth - not
// // Matrix with wrong inputs
// test('Edit data in feed works', async t => {
//     t.pass();
// });
// // And without auth - not
// test('Delete data in feed works', async t => {
//     t.pass();
// });
// // And without auth - not
// // Also add tv4 validation
// test.skip('Feeds are displayed in groups', async t => {
//     const api = await getApi();
//     await auth(api);
//     const resp = await api.get('/groups');
//     t.is(resp.status, 200);
//     t.is(resp.data[0].feeds[0].name, 'new_feed');
// });
//# sourceMappingURL=/home/kate/moeco/adafruit/node_modules/.cache/ava/9a0b625dd327abe99ab14ff02aa79387.js.map