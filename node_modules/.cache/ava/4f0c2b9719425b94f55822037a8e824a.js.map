{"version":3,"sources":["test/feed.test.js"],"names":["test","before","t","api","resp","get","is","status","data","feeds","name","pass","skip"],"mappings":";;AAAA;;AACA;;;;AAEAA,aAAKC,MAAL,CAAY,oCAAZ,EAAkD,MAAMC,CAAN,IAAW;AACzD,QAAMC,GAAG,GAAG,MAAM,uBAAlB;AACA,QAAM,oBAAKA,GAAL,CAAN;AACH,CAHD;;AAKA,kBAAK,mBAAL,EAA0B,MAAMD,CAAN,IAAW;AACjC,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACE,GAAJ,CAAQ,QAAR,CAAnB;AACAH,EAAAA,CAAC,CAACI,EAAF,CAAKF,IAAI,CAACG,MAAV,EAAkB,GAAlB;AACAL,EAAAA,CAAC,CAACI,EAAF,CAAKF,IAAI,CAACI,IAAL,CAAU,CAAV,EAAaC,KAAb,CAAmB,CAAnB,EAAsBC,IAA3B,EAAiC,UAAjC;AACH,CAJD;AAMA,kBAAK,iCAAL,EAAwC,MAAMR,CAAN,IAAW;AAC/CA,EAAAA,CAAC,CAACS,IAAF;AACH,CAFD;AAIA,kBAAK,qCAAL,EAA4C,MAAMT,CAAN,IAAW;AACnDA,EAAAA,CAAC,CAACS,IAAF;AACH,CAFD;AAIA,kBAAK,qBAAL,EAA4B,MAAMT,CAAN,IAAW;AACnCA,EAAAA,CAAC,CAACS,IAAF;AACH,CAFD,E,CAIA;AACA;AACA;;AAEA,kBAAK,wBAAL,EAA+B,MAAMT,CAAN,IAAW;AACtCA,EAAAA,CAAC,CAACS,IAAF;AACH,CAFD,E,CAGA;AAEA;;AAEA,kBAAK,yBAAL,EAAgC,MAAMT,CAAN,IAAW;AACvCA,EAAAA,CAAC,CAACS,IAAF;AACH,CAFD,E,CAGA;;AAEA,kBAAK,2BAAL,EAAkC,MAAMT,CAAN,IAAW;AACzCA,EAAAA,CAAC,CAACS,IAAF;AACH,CAFD,E,CAGA;;AAEA,kBAAK,wBAAL,EAA+B,MAAMT,CAAN,IAAW;AACtCA,EAAAA,CAAC,CAACS,IAAF;AACH,CAFD,E,CAGA;AAEA;;AAEAX,aAAKY,IAAL,CAAU,+BAAV,EAA2C,MAAMV,CAAN,IAAW;AAClD,QAAMC,GAAG,GAAG,MAAM,uBAAlB;AACA,QAAM,oBAAKA,GAAL,CAAN;AACA,QAAMC,IAAI,GAAG,MAAMD,GAAG,CAACE,GAAJ,CAAQ,SAAR,CAAnB;AACAH,EAAAA,CAAC,CAACI,EAAF,CAAKF,IAAI,CAACG,MAAV,EAAkB,GAAlB;AACAL,EAAAA,CAAC,CAACI,EAAF,CAAKF,IAAI,CAACI,IAAL,CAAU,CAAV,EAAaC,KAAb,CAAmB,CAAnB,EAAsBC,IAA3B,EAAiC,UAAjC;AACH,CAND","sourceRoot":"/home/kate/moeco/adafruit","sourcesContent":["import test from 'ava';\nimport { getApi, auth } from '../requests';\n\ntest.before('Add authorization token to request', async t => {\n    const api = await getApi();\n    await auth(api);\n});\n\ntest('Create feed works', async t => {\n    const resp = await api.get('/feeds');\n    t.is(resp.status, 200);\n    t.is(resp.data[0].feeds[0].name, 'new_feed');\n});\n\ntest('Create feed fails without token', async t => {\n    t.pass();\n});\n\ntest('Create feed fails with wrong inputs', async t => {\n    t.pass();\n});\n\ntest('Get all feeds works', async t => {\n    t.pass();\n});\n\n// Get all feeds does not work without auth\n// Get feed by id works\n// Get feed by id does not work without auth\n\ntest('Add data to feed works', async t => {\n    t.pass();\n});\n// And without auth - not\n\n// Matrix with wrong inputs\n\ntest('Edit data in feed works', async t => {\n    t.pass();\n});\n// And without auth - not\n\ntest('Delete data in feed works', async t => {\n    t.pass();\n});\n// And without auth - not\n\ntest('Create dashboard works', async t => {\n    t.pass();\n});\n// Edit, remove, and all witout auth and then with wrong inpts\n\n// Also add tv4 validation\n\ntest.skip('Feeds are displayed in groups', async t => {\n    const api = await getApi();\n    await auth(api);\n    const resp = await api.get('/groups');\n    t.is(resp.status, 200);\n    t.is(resp.data[0].feeds[0].name, 'new_feed');\n});"]}