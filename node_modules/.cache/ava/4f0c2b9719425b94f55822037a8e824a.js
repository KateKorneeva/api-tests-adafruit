"use strict";

var _ava = _interopRequireDefault(require("ava"));

var _requests = require("../requests");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_ava.default.before('Add authorization token to request', async t => {
  const api = await (0, _requests.getApi)();
  await (0, _requests.auth)(api);
});

(0, _ava.default)('Create feed works', async t => {
  const resp = await api.get('/feeds');
  t.is(resp.status, 200);
  t.is(resp.data[0].feeds[0].name, 'new_feed');
});
(0, _ava.default)('Create feed fails without token', async t => {
  t.pass();
});
(0, _ava.default)('Create feed fails with wrong inputs', async t => {
  t.pass();
});
(0, _ava.default)('Get all feeds works', async t => {
  t.pass();
}); // Get all feeds does not work without auth
// Get feed by id works
// Get feed by id does not work without auth

(0, _ava.default)('Add data to feed works', async t => {
  t.pass();
}); // And without auth - not
// Matrix with wrong inputs

(0, _ava.default)('Edit data in feed works', async t => {
  t.pass();
}); // And without auth - not

(0, _ava.default)('Delete data in feed works', async t => {
  t.pass();
}); // And without auth - not

(0, _ava.default)('Create dashboard works', async t => {
  t.pass();
}); // Edit, remove, and all witout auth and then with wrong inpts
// Also add tv4 validation

_ava.default.skip('Feeds are displayed in groups', async t => {
  const api = await (0, _requests.getApi)();
  await (0, _requests.auth)(api);
  const resp = await api.get('/groups');
  t.is(resp.status, 200);
  t.is(resp.data[0].feeds[0].name, 'new_feed');
});
//# sourceMappingURL=/home/kate/moeco/adafruit/node_modules/.cache/ava/4f0c2b9719425b94f55822037a8e824a.js.map